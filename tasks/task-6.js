/**
 1. Напиши программу, которая использует цикл for, чтобы вывести числа от 1 до 10;
 */

const givenNumber = 10;

for (let i = 1; i <= givenNumber; i++) {
  console.log(i);
}

// и в обратную сторону, но по заданию этого нет
for (let i = givenNumber; i >= 1; i--) {
  console.log(i);
}

/**
 2. Напиши программу, которая использует цикл while, чтобы посчитать сумму чисел от 1 до 100;
 */
const calculate = (maxNumber) => { // функция принимающая параметр - число, от которого будем считать
  let sum = maxNumber; // равно макс числу, иначе первое число в сумме будет пропущено, либо писать через do while
  while (maxNumber) { // будем считать пока число не будет '0' т.е. false
    maxNumber--; // каждую итерацию уменьшаем на 1
    sum += maxNumber; // аккумулируем сумма + число каждой итерации
  }
  return sum; // возврат суммы по окончанию цикла
}

calculate(100);


/**
 3.*Выведи в консоль все простые числа от 0 до 100.
 */
// ранее уже решал эту задачу)
function getPrimeNumbers(min, max) { /* функция принимающая на себя два числа */
  if (min > max) {
    [min, max] = [max, min]; /* При вводе значений от макс к мин - разворачивает данные на входе */
  }
  let primeNumbers = []; /* создаем пустой массив для дальнейшей записи туда выходных чисел */
  for (let i = min; i <= max; i++) { /* делаем перебор массива от минимального до максимального числа */
    if (isPrime(i)) {
      /* условие, если простое, то пушим в массив */
      primeNumbers.push(i);
    }
  }
  return primeNumbers;
}

function isPrime(n) { // проверка числа простое или нет
  /* проверяем число на 1 и меньше, то сразу false,
   у 1 один делитель на себя, на 0 делить нельзя */
  if (n < 2) return false;
  // далее проверка на 3 и меньше, 2 и 3 являются простыми, числа меньше мы уже выше отсекли
  if (n <= 3) return true;
  /* проверяем числа на четность и деление 3, эти числа изначально
   не могут быть простыми (кроме 2 и 3, которые мы обработали выше) */
  if (n % 2 === 0 || n % 3 === 0) return false;
  /* действия при i = 5, так проще проверять делители, четные и кратные 3 мы уже отсекли выше */
  let i = 5;
  /* условие работы цикла, i возводим в квадрат.
   Например, n = 19 (простое число). 5*5 <= 19 (25 <= 19) условие не выполнено */
  while (i * i <= n) {
    /* проверяем по двум условиям деления без остатка, если условие выполнено,
     то число не будет простым, соответственно возвращаем false */
    if (n % i === 0 || n % (i + 2) === 0) {
      return false;
    }
    /* именно 6, потому что все что меньше мы уже проверили.
     Цикл проверить делимость уже при i = 11 и опять получит результат дробное число и вернет true,
     потому что не был найден дополнительный делитель*/
    i += 6;
  }
  return true;
}

console.log(getPrimeNumbers(100, 1)); // числа макс/мин перепутаны местами для проверки
console.log(getPrimeNumbers(1, 100));
